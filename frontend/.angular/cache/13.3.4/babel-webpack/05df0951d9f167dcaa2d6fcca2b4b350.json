{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addAntiHeroState, modifyAntiHeroState, removeAllAntiHeroState, removeAntiHeroState, setAntiHeroList } from './anti-hero.actions';\nexport const initialState = {\n  antiHeroes: []\n};\nexport const antiHeroReducer = createReducer(initialState, on(setAntiHeroList, (state, {\n  antiHeroes\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    antiHeroes\n  });\n}), on(removeAntiHeroState, (state, {\n  antiHeroId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    antiHeroes: state.antiHeroes.filter(data => data.id != antiHeroId)\n  });\n}), on(addAntiHeroState, (state, {\n  antiHero\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    antiHeroes: [...state.antiHeroes, antiHero]\n  });\n}), on(modifyAntiHeroState, (state, {\n  antiHero\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    antiHeroes: state.antiHeroes.map(data => data.id === antiHero.id ? antiHero : data)\n  });\n}), on(removeAllAntiHeroState, state => {\n  return Object.assign(Object.assign({}, state), {\n    antiHeroes: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}