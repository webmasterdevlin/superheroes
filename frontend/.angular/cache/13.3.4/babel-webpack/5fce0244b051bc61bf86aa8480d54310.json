{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AntiHeroService = /*#__PURE__*/(() => {\n  class AntiHeroService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAntiHeroes() {\n      return this.http.get(`${environment.apiURL}/anti-heroes`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    getAntiHero(id) {\n      return this.http.get(`${environment.apiURL}/anti-heroes/${id}`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    addAntiHero(antiHero) {\n      return this.http.post(`${environment.apiURL}/anti-heroes`, antiHero).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    updateAntiHero(id, antiHero) {\n      return this.http.put(`${environment.apiURL}/anti-heroes/${id}`, antiHero).pipe(catchError(err => throwError(() => err)));\n    }\n\n    deleteAntiHero(id) {\n      return this.http.delete(`${environment.apiURL}/anti-heroes/${id}`).pipe(catchError(err => throwError(() => err)));\n    }\n\n  }\n\n  AntiHeroService.ɵfac = function AntiHeroService_Factory(t) {\n    return new (t || AntiHeroService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AntiHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AntiHeroService,\n    factory: AntiHeroService.ɵfac,\n    providedIn: 'root'\n  });\n  return AntiHeroService;\n})();","map":null,"metadata":{},"sourceType":"module"}