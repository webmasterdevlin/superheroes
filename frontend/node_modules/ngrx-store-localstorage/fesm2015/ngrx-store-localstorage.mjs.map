{"version":3,"file":"ngrx-store-localstorage.mjs","sources":["../../../projects/lib/src/lib/index.ts","../../../projects/lib/src/ngrx-store-localstorage.ts"],"sourcesContent":["import deepmerge from 'deepmerge';\n\n// Cannot import from the @ngrx/store package due to a module resolution issue.\n// See Issue #206.\nconst INIT_ACTION = '@ngrx/store/init';\nconst UPDATE_ACTION = '@ngrx/store/update-reducers';\n\nconst detectDate = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n\n// correctly parse dates from local storage\nexport const dateReviver = (_key: string, value: any) => {\n    if (typeof value === 'string' && detectDate.test(value)) {\n        return new Date(value);\n    }\n    return value;\n};\n\nconst dummyReviver = (_key: string, value: any) => value;\n\nconst checkIsBrowserEnv = () => {\n    return typeof window !== 'undefined';\n};\n\nconst validateStateKeys = (keys: Keys) => {\n    return (keys as any[]).map((key) => {\n        let attr = key;\n\n        if (typeof key === 'object') {\n            attr = Object.keys(key)[0];\n        }\n\n        if (typeof attr !== 'string') {\n            throw new TypeError(\n                `localStorageSync Unknown Parameter Type: ` + `Expected type of string, got ${typeof attr}`\n            );\n        }\n        return key;\n    });\n};\n\nexport const rehydrateApplicationState = (\n    keys: Keys,\n    storage: Storage,\n    storageKeySerializer: (key: string) => string,\n    restoreDates: boolean\n) => {\n    return (keys as any[]).reduce((acc, curr) => {\n        let key = curr;\n        let reviver = restoreDates ? dateReviver : dummyReviver;\n        let deserialize: (arg0: string) => any;\n        let decrypt: (arg0: string) => string;\n\n        if (typeof key === 'object') {\n            key = Object.keys(key)[0];\n            // use the custom reviver function\n            if (typeof curr[key] === 'function') {\n                reviver = curr[key];\n            } else {\n                // use custom reviver function if available\n                if (curr[key].reviver) {\n                    reviver = curr[key].reviver;\n                }\n                // use custom serialize function if available\n                if (curr[key].deserialize) {\n                    deserialize = curr[key].deserialize;\n                }\n            }\n\n            // Ensure that encrypt and decrypt functions are both present\n            if (curr[key].encrypt && curr[key].decrypt) {\n                if (typeof curr[key].encrypt === 'function' && typeof curr[key].decrypt === 'function') {\n                    decrypt = curr[key].decrypt;\n                } else {\n                    console.error(`Either encrypt or decrypt is not a function on '${curr[key]}' key object.`);\n                }\n            } else if (curr[key].encrypt || curr[key].decrypt) {\n                // Let know that one of the encryption functions is not provided\n                console.error(`Either encrypt or decrypt function is not present on '${curr[key]}' key object.`);\n            }\n        }\n        if (storage !== undefined) {\n            let stateSlice = storage.getItem(storageKeySerializer(key));\n            if (stateSlice) {\n                // Use provided decrypt function\n                if (decrypt) {\n                    stateSlice = decrypt(stateSlice);\n                }\n\n                const isObjectRegex = new RegExp('{|\\\\[');\n                let raw = stateSlice;\n\n                if (stateSlice === 'null' || stateSlice === 'true' || stateSlice === 'false' || isObjectRegex.test(stateSlice.charAt(0))) {\n                    raw = JSON.parse(stateSlice, reviver);\n                }\n\n                return Object.assign({}, acc, {\n                    [key]: deserialize ? deserialize(raw) : raw,\n                });\n            }\n        }\n        return acc;\n    }, {});\n};\n\n// Recursively traverse all properties of the existing slice as defined by the `filter` argument,\n// and output the new object with extraneous properties removed.\nfunction createStateSlice(existingSlice: any, filter: (string | number | KeyConfiguration | Options)[]) {\n    return filter.reduce(\n        (memo: { [x: string]: any; [x: number]: any }, attr: string | number | KeyConfiguration | Options) => {\n            if (typeof attr === 'string' || typeof attr === 'number') {\n                const value = existingSlice?.[attr];\n                if (value !== undefined) {\n                    memo[attr] = value;\n                }\n            } else {\n                for (const key in attr) {\n                    if (Object.prototype.hasOwnProperty.call(attr, key)) {\n                        const element = attr[key];\n                        memo[key] = createStateSlice(existingSlice[key], element);\n                    }\n                }\n            }\n            return memo;\n        },\n        {}\n    );\n}\n\nexport const syncStateUpdate = (\n    state: any,\n    keys: Keys,\n    storage: Storage,\n    storageKeySerializer: (key: string | number) => string,\n    removeOnUndefined: boolean,\n    syncCondition?: (state: any) => any\n) => {\n    if (syncCondition) {\n        try {\n            if (syncCondition(state) !== true) {\n                return;\n            }\n        } catch (e) {\n            // Treat TypeError as do not sync\n            if (e instanceof TypeError) {\n                return;\n            }\n            throw e;\n        }\n    }\n\n    keys.forEach((key: string | KeyConfiguration | Options | ((key: string, value: any) => any)): void => {\n        let stateSlice = state[key as string];\n        let replacer;\n        let space: string | number;\n        let encrypt;\n\n        if (typeof key === 'object') {\n            let name = Object.keys(key)[0];\n            stateSlice = state[name];\n\n            if (typeof stateSlice !== 'undefined' && key[name]) {\n                // use serialize function if specified.\n                if (key[name].serialize) {\n                    stateSlice = key[name].serialize(stateSlice);\n                } else {\n                    // if serialize function is not specified filter on fields if an array has been provided.\n                    let filter: KeyConfiguration[];\n                    if (key[name].reduce) {\n                        filter = key[name];\n                    } else if (key[name].filter) {\n                        filter = key[name].filter;\n                    }\n                    if (filter) {\n                        stateSlice = createStateSlice(stateSlice, filter);\n                    }\n\n                    // Check if encrypt and decrypt are present, also checked at this#rehydrateApplicationState()\n                    if (key[name].encrypt && key[name].decrypt) {\n                        if (typeof key[name].encrypt === 'function') {\n                            encrypt = key[name].encrypt;\n                        }\n                    } else if (key[name].encrypt || key[name].decrypt) {\n                        // If one of those is not present, then let know that one is missing\n                        console.error(\n                            `Either encrypt or decrypt function is not present on '${key[name]}' key object.`\n                        );\n                    }\n                }\n\n                /*\n          Replacer and space arguments to pass to JSON.stringify.\n          If these fields don't exist, undefined will be passed.\n        */\n                replacer = key[name].replacer;\n                space = key[name].space;\n            }\n\n            key = name;\n        }\n\n        if (typeof stateSlice !== 'undefined' && storage !== undefined) {\n            try {\n                if (encrypt) {\n                    // ensure that a string message is passed\n                    stateSlice = encrypt(\n                        typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space)\n                    );\n                }\n                storage.setItem(\n                    storageKeySerializer(key as string),\n                    typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space)\n                );\n            } catch (e) {\n                console.warn('Unable to save state to localStorage:', e);\n            }\n        } else if (typeof stateSlice === 'undefined' && removeOnUndefined && storage !== undefined) {\n            try {\n                storage.removeItem(storageKeySerializer(key as string));\n            } catch (e) {\n                console.warn(`Exception on removing/cleaning undefined '${key}' state`, e);\n            }\n        }\n    });\n};\n\n// Default merge strategy is a full deep merge.\nexport const defaultMergeReducer = (state: any, rehydratedState: any, action: any) => {\n    if ((action.type === INIT_ACTION || action.type === UPDATE_ACTION) && rehydratedState) {\n        const overwriteMerge = (destinationArray: any, sourceArray: any, options: any) => sourceArray;\n        const options: deepmerge.Options = {\n            arrayMerge: overwriteMerge,\n        };\n\n        state = deepmerge(state, rehydratedState, options);\n    }\n\n    return state;\n};\n\nexport const localStorageSync = (config: LocalStorageConfig) => (reducer: any) => {\n    if (\n        (config.storage === undefined && !config.checkStorageAvailability) ||\n        (config.checkStorageAvailability && checkIsBrowserEnv())\n    ) {\n        config.storage = localStorage || window.localStorage;\n    }\n\n    if (config.storageKeySerializer === undefined) {\n        config.storageKeySerializer = (key) => key;\n    }\n\n    if (config.restoreDates === undefined) {\n        config.restoreDates = true;\n    }\n\n    // Use default merge reducer.\n    let mergeReducer = config.mergeReducer;\n\n    if (mergeReducer === undefined || typeof mergeReducer !== 'function') {\n        mergeReducer = defaultMergeReducer;\n    }\n\n    const stateKeys = validateStateKeys(config.keys);\n    const rehydratedState = config.rehydrate\n        ? rehydrateApplicationState(stateKeys, config.storage, config.storageKeySerializer, config.restoreDates)\n        : undefined;\n\n    return function (state: any, action: any) {\n        let nextState: any;\n\n        // If state arrives undefined, we need to let it through the supplied reducer\n        // in order to get a complete state as defined by user\n        if (action.type === INIT_ACTION && !state) {\n            nextState = reducer(state, action);\n        } else {\n            nextState = { ...state };\n        }\n\n        // Merge the store state with the rehydrated state using\n        // either a user-defined reducer or the default.\n        nextState = mergeReducer(nextState, rehydratedState, action);\n\n        nextState = reducer(nextState, action);\n\n        if (action.type !== INIT_ACTION) {\n            syncStateUpdate(\n                nextState,\n                stateKeys,\n                config.storage,\n                config.storageKeySerializer as (key: string | number) => string,\n                config.removeOnUndefined,\n                config.syncCondition\n            );\n        }\n\n        return nextState;\n    };\n};\n\nexport interface LocalStorageConfig {\n    keys: Keys;\n    rehydrate?: boolean;\n    storage?: Storage;\n    removeOnUndefined?: boolean;\n    restoreDates?: boolean;\n    storageKeySerializer?: (key: string) => string;\n    syncCondition?: (state: any) => any;\n    checkStorageAvailability?: boolean;\n    mergeReducer?: (state: any, rehydratedState: any, action: any) => any;\n}\n\ninterface KeyConfiguration {\n    [key: string]: string[] | number[] | KeyConfiguration[] | Options | ((key: string, value: any) => any);\n}\n\ninterface Options {\n    serialize?: (state: any) => any;\n    deserialize?: (state: any) => any;\n    reviver?: (key: string, value: any) => any;\n    replacer?: ((key: string, value: any) => any) | string[];\n    encrypt?: (message: string) => string;\n    decrypt?: (message: string) => string;\n    filter?: string[];\n    space?: string | number;\n}\n\nexport type Keys = (KeyConfiguration | Options| string)[];\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}