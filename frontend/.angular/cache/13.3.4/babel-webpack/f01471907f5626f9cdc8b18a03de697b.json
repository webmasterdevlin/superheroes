{"ast":null,"code":"import { CommandBarActions } from '../../enums/command-bar-actions.enum';\nimport { TableActions } from '../../enums/table-actions.enum';\nimport { AntiHeroActions } from '../../state/anti-hero.actions';\nimport { selectAntiHeroes } from '../../state/anti-hero.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"../../components/anti-hero-command-bar/anti-hero-command-bar.component\";\nimport * as i4 from \"../../components/anti-hero-list/anti-hero-list.component\";\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(router, store) {\n      this.router = router;\n      this.store = store; // sample data of anti hero\n\n      this.antiHeroes = [];\n      this.antiHeroes$ = this.store.select(selectAntiHeroes());\n      this.headers = [{\n        headerName: \"First Name\",\n        fieldName: \"firstName\"\n      }, {\n        headerName: \"Last Name\",\n        fieldName: \"lastName\"\n      }, {\n        headerName: \"House\",\n        fieldName: \"house\"\n      }, {\n        headerName: \"Known As\",\n        fieldName: \"knownAs\"\n      }];\n    }\n\n    ngOnInit() {\n      this.store.dispatch({\n        type: AntiHeroActions.GET_ANTI_HERO_LIST\n      });\n      this.assignAntiHeroes();\n    }\n\n    assignAntiHeroes() {\n      this.antiHeroes$.subscribe(data => {\n        this.antiHeroes = data;\n      });\n    }\n\n    selectAntiHero(data) {\n      switch (data.action) {\n        case TableActions.View:\n          {\n            this.router.navigate(['anti-heroes', 'form', data.antiHero.id]);\n            return;\n          }\n\n        case TableActions.Delete:\n          {\n            this.store.dispatch({\n              type: AntiHeroActions.REMOVE_ANTI_HERO_API,\n              payload: data.antiHero.id\n            });\n            return;\n          }\n\n        default:\n          \"\";\n      }\n    }\n\n    executeCommandBarAction(action) {\n      switch (action) {\n        case CommandBarActions.Create:\n          {\n            this.router.navigate([\"anti-heroes\", \"form\"]);\n            return;\n          }\n\n        case CommandBarActions.DeleteAll:\n          {\n            this.store.dispatch({\n              type: AntiHeroActions.REMOVE_ALL_ANTI_HERO_API,\n              payload: [...this.antiHeroes.map(d => d.id)]\n            });\n            return;\n          }\n\n        default:\n          \"\";\n      }\n    }\n\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-list\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"action\"], [3, \"antiHeroes\", \"headers\", \"antiHero\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-anti-hero-command-bar\", 0);\n        i0.ɵɵlistener(\"action\", function ListComponent_Template_app_anti_hero_command_bar_action_0_listener($event) {\n          return ctx.executeCommandBarAction($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"app-anti-hero-list\", 1);\n        i0.ɵɵlistener(\"antiHero\", function ListComponent_Template_app_anti_hero_list_antiHero_1_listener($event) {\n          return ctx.selectAntiHero($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"antiHeroes\", ctx.antiHeroes)(\"headers\", ctx.headers);\n      }\n    },\n    directives: [i3.AntiHeroCommandBarComponent, i4.AntiHeroListComponent],\n    styles: [\"button[_ngcontent-%COMP%]{margin-right:10px}\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}