{"ast":null,"code":"import _asyncToGenerator from \"/Users/inmetadeveloper/Desktop/Book/superheroes/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { map, mergeMap, catchError, tap } from 'rxjs/operators';\nimport { AuthActions } from './auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/core/services/authenticate.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthEffects = /*#__PURE__*/(() => {\n  class AuthEffects {\n    constructor(actions$, authService, router) {\n      this.actions$ = actions$;\n      this.authService = authService;\n      this.router = router;\n      this.loginUser$ = createEffect(() => {\n        return this.actions$.pipe(ofType(AuthActions.LOGIN), mergeMap(data => this.authService.login(data.payload).pipe(map(data => ({\n          type: AuthActions.SET_TOKEN,\n          token: data.token\n        })), tap(() => this.router.navigate([\"anti-heroes\"])), catchError( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            return {\n              type: AuthActions.LOGIN_ERROR,\n              error: data.error\n            };\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()))));\n      }, {\n        dispatch: true\n      });\n      this.createUser$ = createEffect(() => {\n        return this.actions$.pipe(ofType(AuthActions.CREATE_USER), mergeMap(data => this.authService.register(data.payload).pipe(tap(() => this.router.navigate([\"login\"])), catchError( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (data) {\n            return {\n              type: AuthActions.LOGIN_ERROR,\n              error: data.error\n            };\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }()))));\n      }, {\n        dispatch: true\n      });\n    }\n\n  }\n\n  AuthEffects.ɵfac = function AuthEffects_Factory(t) {\n    return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AuthenticateService), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthEffects,\n    factory: AuthEffects.ɵfac\n  });\n  return AuthEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}